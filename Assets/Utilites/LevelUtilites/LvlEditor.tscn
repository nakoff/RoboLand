[gd_scene load_steps=7 format=2]

[sub_resource type="GDScript" id=7]
script/source = "extends Spatial


export(NodePath) var map_size_node:NodePath;
export(NodePath) var empty_cells_node:NodePath;

export(String) var save_name:String;

onready var n_map_size:MeshInstance = get_node(map_size_node) as MeshInstance;
onready var n_empty_cells:GridMap = get_node(empty_cells_node) as GridMap;

var size_map := Vector2();
var grid := {};

func _ready():
	size_map = n_map_size.mesh.size;
	print(size_map);
	var cells_pos = n_empty_cells.get_used_cells();
	
	for x in range(size_map.x):
		x += 1;
		grid[x] = {};
		for y in range(size_map.y):
			y += 1;
			grid[x][y] = 0;
			for cell in cells_pos:
				if cell.x == x and cell.z == y:
					grid[x][y] = 1;
	
	var jgrid = to_json(grid);
	print(jgrid);

	var file = File.new()
	file.open(\"res://Levels/\"+save_name+\".json\", File.WRITE)
	file.store_string(jgrid)
	file.close()

"

[sub_resource type="SpatialMaterial" id=2]
flags_transparent = true
albedo_color = Color( 0.384314, 0, 0, 0.407843 )

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 2 )
size = Vector2( 20, 10 )

[sub_resource type="SpatialMaterial" id=4]
flags_unshaded = true
albedo_color = Color( 0.00784314, 0.596078, 0.0431373, 1 )

[sub_resource type="CubeMesh" id=5]
material = SubResource( 4 )
size = Vector3( 1, 0.5, 1 )

[sub_resource type="MeshLibrary" id=6]
item/0/name = "Cell"
item/0/mesh = SubResource( 5 )
item/0/mesh_transform = null
item/0/shapes = [  ]
item/0/navmesh_transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )

[node name="LvlEditor" type="Spatial"]
script = SubResource( 7 )
map_size_node = NodePath("MapSize")
empty_cells_node = NodePath("EmptyCells")
save_name = "lvl1"

[node name="MapSize" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, 5 )
mesh = SubResource( 3 )
material/0 = null

[node name="EmptyCells" type="GridMap" parent="."]
mesh_library = SubResource( 6 )
cell_size = Vector3( 1, 1, 1 )
data = {
"cells": PoolIntArray( 1, 1, 0, 2, 1, 0, 3, 1, 0, 4, 1, 0, 5, 1, 0, 6, 1, 0, 7, 1, 0, 8, 1, 0, 9, 1, 0, 10, 1, 0, 11, 1, 0, 12, 1, 0, 13, 1, 0, 14, 1, 0, 15, 1, 0, 16, 1, 0, 17, 1, 0, 18, 1, -1610612736, 1, 2, 0, 2, 2, 0, 3, 2, 0, 4, 2, 0, 5, 2, 0, 6, 2, -1610612736, 7, 2, 0, 8, 2, 0, 9, 2, 0, 10, 2, 0, 11, 2, -1610612736, 12, 2, 0, 13, 2, 0, 14, 2, 0, 15, 2, 0, 16, 2, 0, 17, 2, 0, 18, 2, 0, 1, 3, 0, 2, 3, 0, 3, 3, 0, 4, 3, -1610612736, 5, 3, 0, 6, 3, -1610612736, 7, 3, -1610612736, 8, 3, 0, 9, 3, 0, 10, 3, 0, 11, 3, 0, 12, 3, 0, 13, 3, -1610612736, 14, 3, 0, 15, 3, 0, 16, 3, 0, 17, 3, 0, 18, 3, 0, 1, 4, 0, 2, 4, -1610612736, 3, 4, -1610612736, 4, 4, 0, 5, 4, 0, 6, 4, 0, 7, 4, 0, 8, 4, -1610612736, 9, 4, 0, 10, 4, 0, 11, 4, -1610612736, 12, 4, -1610612736, 13, 4, 0, 14, 4, 0, 15, 4, -1610612736, 16, 4, 0, 17, 4, 0, 18, 4, 0, 1, 5, 0, 2, 5, 0, 3, 5, -1610612736, 4, 5, 0, 5, 5, 0, 6, 5, 0, 7, 5, 0, 8, 5, 0, 9, 5, 0, 10, 5, 0, 11, 5, -1610612736, 12, 5, 0, 13, 5, 0, 14, 5, 0, 15, 5, 0, 16, 5, 0, 17, 5, 0, 18, 5, -1610612736, 1, 6, 0, 2, 6, 0, 3, 6, 0, 4, 6, 0, 5, 6, 0, 6, 6, 0, 7, 6, -1610612736, 8, 6, -1610612736, 9, 6, 0, 10, 6, -1610612736, 11, 6, -1610612736, 12, 6, -1610612736, 13, 6, 0, 14, 6, 0, 15, 6, 0, 16, 6, 0, 17, 6, 0, 18, 6, 0, 1, 7, 0, 2, 7, 0, 3, 7, 0, 4, 7, 0, 5, 7, 0, 6, 7, -1610612736, 7, 7, 0, 8, 7, 0, 9, 7, 0, 10, 7, 0, 11, 7, 0, 12, 7, 0, 13, 7, 0, 14, 7, 0, 15, 7, 0, 16, 7, 0, 17, 7, 0, 18, 7, 0, 1, 8, 0, 2, 8, 0, 3, 8, 0, 4, 8, 0, 5, 8, 0, 6, 8, 0, 7, 8, 0, 8, 8, 0, 9, 8, 0, 10, 8, 0, 11, 8, 0, 12, 8, 0, 13, 8, -1610612736, 14, 8, 0, 15, 8, 0, 16, 8, 0, 17, 8, 0, 18, 8, 0 )
}
__meta__ = {
"_editor_clip_": 0
}
